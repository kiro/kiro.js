// Generated by CoffeeScript 1.4.0
(function() {
  var bootstrap, docs, isActive, models, oldSetInterval, previousInterval,
    __slice = [].slice;

  bootstrap = window.BC.namespace("bootstrap");

  docs = window.BC.namespace("docs");

  models = window.BC.namespace("models");

  $.extend(this, bootstrap);

  oldSetInterval = window.setInterval;

  previousInterval = null;

  window.setInterval = function(fn, time) {
    return previousInterval = oldSetInterval.call(window, fn, time);
  };

  docs.example = function(title, description, content, attr) {
    if (attr == null) {
      attr = {};
    }
    if (previousInterval) {
      window.clearInterval(previousInterval);
    }
    return div(attr, h2(title), p(description), content(), pre({
      "class": 'prettyprint linenums',
      id: 'code ' + title
    }));
  };

  docs.body = function() {
    var items;
    items = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return div(items).addClass('bs-docs-example');
  };

  docs.currentLocation = models.model(location.hash);

  isActive = function(link) {
    if (docs.currentLocation()) {
      return docs.currentLocation().indexOf(link.getAttr('href')) === 0;
    }
  };

  docs.toLi = function(link) {
    return li(link).bindClass(docs.currentLocation, function() {
      if (isActive(link)) {
        return 'active';
      }
    }).onUpdate(function(el) {
      if (el.hasClass('active')) {
        el.parent().parent().find('li').removeClass('active');
        return el.addClass('active');
      }
    });
  };

}).call(this);
