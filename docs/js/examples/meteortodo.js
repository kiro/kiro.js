// Generated by CoffeeScript 1.6.3
(function() {
  var bootstrap, docs, models;

  docs = window.BC.namespace("docs");

  docs.examples = window.BC.namespace("docs.examples");

  bootstrap = window.BC.namespace("bootstrap");

  models = window.BC.namespace("models");

  $.extend(this, bootstrap, models, docs);

  docs.examples.meteortodo = function() {
    return section(h1("Meteor todo"), function() {
      docs.code.meteortodo();
      return example("Meteor todo app", "", function() {
        var allLists, filter, main, side, tag, todo, todoList, todo_item, todos;
        tag = function(name) {
          return object({
            name: name
          });
        };
        todo = function(name) {
          return object({
            name: name,
            done: false
          }, tags([]));
        };
        todoList = function(name) {
          return object({
            name: name,
            todos: []
          });
        };
        allLists = array([]);
        filter = function() {
          var selectedTag;
          selectedTag = model();
          return div({
            id: "top-tag-filter"
          }, div({
            id: "tag-filter",
            "class": "tag-list"
          }, div({
            "class": "label"
          }, "Show:").foreach(tags, function(tag) {
            return div({
              "class": "tag"
            }, tag.text, span({
              "class": "count"
            }, tag.count)).bindClass(selectedTag, function() {
              if (selectedTag() === tag) {
                return 'selected';
              }
            }).on('click', function() {
              return selectedTag(tag);
            });
          })));
        };
        main = function() {
          return div({
            id: "main-pane"
          }, todos(list));
        };
        side = function() {
          var newList, selectedList;
          selectedList = model();
          newList = model("");
          return div({
            id: "side-pane"
          }, h3("Todo Lists"), div({
            id: "lists"
          }).foreach(lists, function(list) {
            var editing;
            editing = model(false);
            return div({
              "class": "list"
            }, div({
              "class": "edit"
            }, input.text({
              "class": "list-name-input",
              id: "list-name-input"
            }, list.name)).bindVisible(editing), div({
              "class": "display"
            }, a({
              "class": "list-name {{name_class}}",
              href: "/{{_id}}"
            }, list.name).on('click', function() {})).bindVisible(editing, function() {
              return !editing();
            }));
          }), div({
            id: "createList"
          }, input.text({
            id: "new-list",
            placeholder: "New list"
          }, newList)));
        };
        todos = function(list) {
          var newTodoText;
          newTodoText = model();
          return div({
            id: "items-view"
          }, div({
            id: "new-todo-box"
          }, input.text({
            id: "new-todo",
            placeholder: "New item"
          }, newTodoText)), ul({
            id: "item-list"
          }).foreach(list.todos, function(todo) {
            return todo_item(todo);
          }));
        };
        todo_item = function(todo) {
          var addingTag, editing, tagText;
          editing = model(false);
          addingTag = model(false);
          tagText = model("");
          return li({
            "class": "todo"
          }, div({
            "class": "edit"
          }, input.text({
            id: "todo-input"
          }, todo.text)).bindVisible(editing), div(div({
            "class": "destroy"
          }), div({
            "class": "display"
          }, input.checkbox({
            "class": "check",
            name: "markdone"
          }, todo.done), div({
            "class": "todo-text"
          }, todo.text))).bindVisible(editing, function() {
            return !editing();
          }), div({
            "class": "item-tags"
          }).foreach(todo.tags, function(tag) {
            return div({
              "class": "tag removable_tag"
            }, div({
              "class": "name"
            }, tag.name), div({
              "class": "remove"
            }));
          }), div({
            "class": "tag edittag"
          }, input.text({
            id: "edittag-input"
          }, tagText).on('keydown', function() {})).bindVisible(addingTag), div({
            "class": "tag addtag"
          }, "+tag").bindVisible(addingTag, function() {
            return !addingTag();
          }).on('click', function() {
            return addingTag(true);
          })).bindClass(todo.done, function() {
            if (todo.done) {
              return 'done';
            }
          });
        };
        return body(filter(), main(), side());
      });
    });
  };

}).call(this);
