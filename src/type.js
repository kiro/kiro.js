// Generated by CoffeeScript 1.4.0
(function() {
  var common, controls, h, mixins, pElement,
    __slice = [].slice;

  common = BC.namespace("controls");

  controls = BC.namespace("controls");

  mixins = window.BC.namespace("mixins");

  $.extend(this, common);

  h = function(size) {
    return curry(tag("h" + size), "");
  };

  controls.h1 = h(1);

  controls.h2 = h(2);

  controls.h3 = h(3);

  controls.h4 = h(4);

  controls.h5 = h(5);

  controls.h6 = h(6);

  pElement = tag("p");

  controls.p = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (args.length > 0 && args.length !== 2) {
      return pElement("", args);
    } else if (args.length === 2) {
      return pElement(args[0], args[1]);
    } else if (args.length === 0) {
      return $.extend(mixins.control(), mixins.textContextual(), mixins.composite(pElement), {
        lead: curry(pElement, 'lead')
      });
    }
  };

  controls.span = function() {
    var args, spanElement;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    spanElement = tag("span");
    if (args.length !== 0) {
      return spanElement.apply(null, args);
    } else {
      return $.extend(mixins.control(), mixins.textContextual(), mixins.composite(spanElement));
    }
  };

  controls.address = function() {
    var elements, value, values, _i, _len;
    values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    elements = [];
    for (_i = 0, _len = values.length; _i < _len; _i++) {
      value = values[_i];
      elements.push(value);
      elements.push('<br>');
    }
    elements.pop();
    return tag('address')('', elements);
  };

  controls.blockquote = curry(tag('blockquote'), '');

  controls.small = curry(tag('small'), '');

  controls.bold = curry(tag('strong'), '');

  controls.strong = controls.bold;

  controls.italic = curry(tag('em'), '');

  controls.em = controls.italic;

  controls.ul = curry(tag('ul'), '');

  controls.ul.unstyled = curry(tag('ul'), 'unstyled');

  controls.ul.inline = curry(tag('ul'), 'inline');

  controls.li = curry(tag('li'), '');

  controls.ol = curry(tag('ol'), '');

  controls.dl = curry(tag('dl'), '');

  controls.dl.horizontal = curry(tag('dl'), 'dl-horizontal');

  controls.dt = curry(tag('dt'), '');

  controls.dd = curry(tag('dd'), '');

  controls.code = curry(tag('code'), '');

  controls.pre = curry(tag('pre'), '');

  controls.pre.scrollable = curry(tag('pre'), '.pre-scrollable');

}).call(this);
