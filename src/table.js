// Generated by CoffeeScript 1.4.0
(function() {
  var common, controls, mixins, tableElement, trElement,
    __slice = [].slice;

  common = BC.namespace("common");

  controls = BC.namespace("controls");

  mixins = window.BC.namespace("mixins");

  $.extend(this, common);

  tableElement = tag('table');

  controls.table = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (args.length !== 0) {
      return tableElement.apply(null, ["table"].concat(__slice.call(args)));
    } else {
      return $.extend(mixins.control(), mixins.composite(function() {
        var args, classes;
        classes = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        return tableElement.apply(null, ["table " + classes].concat(__slice.call(args)));
      }), {
        stripped: function() {
          return this.addClass('table-striped');
        },
        bordered: function() {
          return this.addClass('table-bordered');
        },
        hover: function() {
          return this.addClass('table-hover');
        },
        condensed: function() {
          return this.addClass('table-condensed');
        }
      });
    }
  };

  trElement = tag('tr');

  controls.tr = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (args.length !== 0) {
      return trElement.apply(null, [""].concat(__slice.call(args)));
    } else {
      return $.extend(mixins.control(), mixins.composite(trElement), mixins.contextual(''));
    }
  };

  controls.td = curry(tag('td'), '');

  controls.thead = curry(tag('thead'), '');

  controls.tbody = curry(tag('tbody'), '');

  controls.th = curry(tag('th'), '');

  controls.caption = curry(tag('caption'), '');

}).call(this);
