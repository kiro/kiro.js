// Generated by CoffeeScript 1.4.0
(function() {
  var common, controls, h, mixins,
    __slice = [].slice;

  common = BC.namespace("controls");

  controls = BC.namespace("controls");

  mixins = window.BC.namespace("mixins");

  $.extend(this, common);

  h = function(size) {
    return tag("h" + size);
  };

  controls.h1 = h(1);

  controls.h2 = h(2);

  controls.h3 = h(3);

  controls.h4 = h(4);

  controls.h5 = h(5);

  controls.h6 = h(6);

  controls.p = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return $.extend(tag("p").apply(null, args), mixins.textContextual(), {
      lead: function() {
        return this.addClass('lead');
      }
    });
  };

  controls.span = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return $.extend(tag("span").apply(null, args), mixins.textContextual());
  };

  controls.address = function() {
    var elements, value, values, _i, _len;
    values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    elements = [];
    for (_i = 0, _len = values.length; _i < _len; _i++) {
      value = values[_i];
      elements.push(value);
      elements.push('<br>');
    }
    elements.pop();
    return tag('address')('', elements);
  };

  controls.blockquote = tag('blockquote');

  controls.small = tag('small');

  controls.bold = tag('strong');

  controls.strong = controls.bold;

  controls.italic = tag('em');

  controls.em = controls.italic;

  controls.ul = tag('ul');

  controls.ul.unstyled = tag('ul', 'unstyled');

  controls.ul.inline = tag('ul', 'inline');

  controls.li = tag('li');

  controls.ol = tag('ol');

  controls.dl = tag('dl');

  controls.dl.horizontal = tag('dl', 'dl-horizontal');

  controls.dt = tag('dt');

  controls.dd = tag('dd');

  controls.code = tag('code');

  controls.pre = tag('pre');

  controls.pre.scrollable = tag('pre', '.pre-scrollable');

}).call(this);
