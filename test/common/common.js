// Generated by CoffeeScript 1.4.0
(function() {
  var bootstrap, common, models, util;

  common = window.BC.namespace("common");

  models = window.BC.namespace("models");

  util = window.BC.namespace("test.util");

  bootstrap = window.BC.namespace("bootstrap");

  $.extend(this, common, models, util, bootstrap);

  describe("Bindings test", function() {
    var newListener;
    newListener = function() {
      var callback, calls;
      calls = 0;
      callback = function() {
        return calls++;
      };
      callback.calls = function() {
        return calls;
      };
      return callback;
    };
    it("Tests subscribe", function() {
      var listener, o;
      o = observable();
      listener = newListener();
      o.subscribe(listener);
      o.subscribe(listener);
      o.subscribe(listener);
      o.publish(1);
      expect(listener.calls()).toBe(1);
      o.publish(2);
      return expect(listener.calls()).toBe(2);
    });
    return it("Tests unsubscribe", function() {
      var listener1, listener2, o;
      o = observable();
      listener1 = newListener();
      listener2 = newListener();
      o.subscribe(listener1);
      o.subscribe(listener2);
      o.publish(1);
      expect(listener1.calls()).toBe(1);
      expect(listener2.calls()).toBe(1);
      o.unsubscribe(listener2);
      o.publish(1);
      expect(listener1.calls()).toBe(2);
      return expect(listener2.calls()).toBe(1);
    });
  });

}).call(this);
